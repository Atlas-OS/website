---
import { Icon } from 'astro-icon/components';
import { Image } from 'astro:assets';
import Al0ranteImage from '../../assets/al0rante.webp';
import MisticImage from '../../assets/mistic.webp';
import StarwraithImage from '../../assets/starwraith.webp';
import SectionTitle from '../common/SectionTitle.astro';
---

<section class="relative mx-auto mt-32 mb-32 max-w-7xl px-4">
  <div class="grid grid-cols-1 items-center gap-16 md:grid-cols-2 md:gap-24">
    <div class="order-1 md:order-1">
      <SectionTitle>Trusted by the Pros</SectionTitle>
      <h2 class="mb-6 text-4xl font-semibold tracking-tight text-white md:text-5xl">
        The choice for <span class="text-primary">peak performance</span>
      </h2>
      <p class="mb-8 leading-relaxed text-white/70">
        Milliseconds decide matches. Top competitors rely on AtlasOS for the ultra-stable, low-latency environment
        needed to perform at their peak. Gain the edge that comes from eliminating system hitches and ensuring instant
        response, crucial in both practice and pro play.
      </p>
      <ul class="space-y-6 leading-relaxed text-white/70">
        <li class="flex items-start">
          <Icon name="tabler:clock-pause" class="text-primary-300 mt-1 mr-3 h-5 w-5 flex-shrink-0" />
          <div class="flex-grow">
            <h3 class="mb-1 font-semibold text-white">Smooth performance</h3>
            <p class="text-sm">Maintain focus with consistent, hitch-free gameplay.</p>
          </div>
        </li>
        <li class="flex items-start">
          <Icon name="tabler:pointer" class="text-primary-300 mt-1 mr-3 h-5 w-5 flex-shrink-0" />
          <div class="flex-grow">
            <h3 class="mb-1 font-semibold text-white">Instant input</h3>
            <p class="text-sm">React faster with reduced input lag for critical moments.</p>
          </div>
        </li>
        <li class="flex items-start">
          <Icon name="tabler:cpu" class="text-primary-300 mt-1 mr-3 h-5 w-5 flex-shrink-0" />
          <div class="flex-grow">
            <h3 class="mb-1 font-semibold text-white">Optimized response</h3>
            <p class="text-sm">Maximize hardware potential for a tangible competitive edge.</p>
          </div>
        </li>
      </ul>
    </div>

    <div class="order-2 overflow-hidden md:order-2">
      <p class="mb-4 text-xs text-white/50">
        Are you a pro who uses Atlas or wants to get started? <a
          href="mailto:contact@atlasos.net"
          class="text-primary-300 font-semibold hover:underline"
        >
          Get in touch</a
        >.
      </p>
      <div id="player-slideshow-container" class="relative">
        <div id="player-slideshow" class="relative h-80 w-full overflow-hidden rounded-lg">
          <div
            class="player-slide group absolute inset-0 p-4 opacity-100 transition-opacity duration-1000"
            style="z-index: 10;"
          >
            <Image
              src={MisticImage}
              alt="Pro Valorant player Mistic"
              class="absolute inset-0 -z-10 h-full w-full rounded-lg object-cover"
              quality={80}
            />
            <div class="absolute inset-0 z-0 rounded-lg bg-gradient-to-t from-black/70 to-transparent"></div>
            <div class="absolute bottom-4 left-4 z-10">
              <p class="font-semibold text-white">Mistic</p>
              <p class="mb-1 text-sm text-white/90">Valorant</p>
              <div class="flex items-center space-x-2">
                <a
                  href="https://x.com/misticjk"
                  target="_blank"
                  rel="noopener noreferrer"
                  aria-label="Mistic X"
                  class="text-white/70 transition hover:text-white"
                >
                  <Icon name="tabler:brand-x" class="h-4 w-4" />
                </a>
                <a
                  href="https://www.twitch.tv/mistic"
                  target="_blank"
                  rel="noopener noreferrer"
                  aria-label="Mistic Twitch"
                  class="text-white/70 transition hover:text-white"
                >
                  <Icon name="tabler:brand-twitch" class="h-4 w-4" />
                </a>
              </div>
            </div>
          </div>
          <div
            class="player-slide group absolute inset-0 p-4 opacity-0 transition-opacity duration-1000"
            style="z-index: 0;"
          >
            <Image
              src={Al0ranteImage}
              alt="Pro Valorant player al0rante"
              class="absolute inset-0 -z-10 h-full w-full rounded-lg object-cover"
              style="object-position: center 12%;"
              quality={80}
            />
            <div class="absolute inset-0 z-0 rounded-lg bg-gradient-to-t from-black/70 to-transparent"></div>
            <div class="absolute bottom-4 left-4 z-10">
              <p class="font-semibold text-white">al0rante</p>
              <p class="mb-1 text-sm text-white/90">Valorant</p>
              <div class="flex items-center space-x-2">
                <a
                  href="https://x.com/al0rante"
                  target="_blank"
                  rel="noopener noreferrer"
                  aria-label="al0rante X"
                  class="text-white/70 transition hover:text-white"
                >
                  <Icon name="tabler:brand-x" class="h-4 w-4" />
                </a>
                <a
                  href="https://www.twitch.tv/al0rante"
                  target="_blank"
                  rel="noopener noreferrer"
                  aria-label="al0rante Twitch"
                  class="text-white/70 transition hover:text-white"
                >
                  <Icon name="tabler:brand-twitch" class="h-4 w-4" />
                </a>
              </div>
            </div>
          </div>
          <div
            class="player-slide group absolute inset-0 p-4 opacity-0 transition-opacity duration-1000"
            style="z-index: 0;"
          >
            <Image
              src={StarwraithImage}
              alt="Valorant creator Starwraith"
              class="absolute inset-0 -z-10 h-full w-full rounded-lg object-cover"
              quality={80}
            />
            <div class="absolute inset-0 z-0 rounded-lg bg-gradient-to-t from-black/70 to-transparent"></div>
            <div class="absolute bottom-4 left-4 z-10">
              <p class="font-semibold text-white">Starwraith</p>
              <p class="mb-1 text-sm text-white/90">Valorant (Former Pro)</p>
              <div class="flex items-center space-x-2">
                <a
                  href="https://x.com/StarWraith"
                  target="_blank"
                  rel="noopener noreferrer"
                  aria-label="Starwraith X"
                  class="text-white/70 transition hover:text-white"
                >
                  <Icon name="tabler:brand-x" class="h-4 w-4" />
                </a>
                <a
                  href="https://www.twitch.tv/starwraith"
                  target="_blank"
                  rel="noopener noreferrer"
                  aria-label="Starwraith Twitch"
                  class="text-white/70 transition hover:text-white"
                >
                  <Icon name="tabler:brand-twitch" class="h-4 w-4" />
                </a>
              </div>
            </div>
          </div>
        </div>
        <div id="slideshow-dots" class="mt-4 flex justify-center space-x-1"></div>
      </div>
    </div>
  </div>
</section>

<script>
  /**
   * Initializes the player slideshow: creates dots, starts auto-advance, and sets up hover pause.
   */
  function initSlideshow(): void {
    const container = document.getElementById('player-slideshow-container') as HTMLElement | null;
    const slideshow = document.getElementById('player-slideshow') as HTMLElement | null;
    const dotsContainer = document.getElementById('slideshow-dots') as HTMLElement | null;
    if (!container || !slideshow || !dotsContainer) return;

    const config: {
      slideDuration: number;
      activeClasses: { slide: string; dot: string };
      inactiveClasses: { slide: string; dot: string };
    } = {
      slideDuration: 5000,
      activeClasses: {
        slide: 'opacity-100',
        dot: 'bg-white',
      },
      inactiveClasses: {
        slide: 'opacity-0',
        dot: 'bg-white/30',
      },
    };

    const state: {
      slides: HTMLElement[];
      dots: HTMLElement[];
      currentIndex: number;
      interval: number;
    } = {
      slides: [...slideshow.querySelectorAll<HTMLElement>('.player-slide')],
      dots: [] as HTMLElement[],
      currentIndex: 0,
      interval: 0,
    };

    state.slides.forEach((_, index) => {
      const dot = createDot(index);
      dotsContainer.appendChild(dot);
      const indicator = dot.querySelector<HTMLElement>('.line-indicator');
      if (indicator) {
        state.dots.push(indicator);
      }
    });

    setSlide(0);
    startInterval();

    container.addEventListener('mouseenter', () => clearInterval(state.interval));
    container.addEventListener('mouseleave', startInterval);

    /**
     * Creates a navigation dot button for the slide at the given index.
     * @param {number} index - The slide index for this dot.
     * @returns {HTMLButtonElement} The dot button element.
     */
    function createDot(index: number): HTMLButtonElement {
      const button = document.createElement('button');
      button.classList.add('nav-dot-button', 'relative', 'p-1.5', 'cursor-pointer');
      button.setAttribute('aria-label', `Go to slide ${index + 1}`);

      const indicator = document.createElement('span');
      indicator.classList.add(
        'line-indicator',
        'block',
        'h-0.5',
        'w-6',
        config.inactiveClasses.dot,
        'transition-colors',
        'duration-300',
        'pointer-events-none'
      );
      indicator.setAttribute('aria-hidden', 'true');
      button.appendChild(indicator);

      button.addEventListener('click', () => {
        setSlide(index);
        resetInterval();
      });

      button.addEventListener('keydown', (e: KeyboardEvent) => {
        if (e.key === 'Enter' || e.key === ' ') {
          e.preventDefault();
          setSlide(index);
          resetInterval();
        }
      });

      return button;
    }

    /**
     * Activates the slide at the given index and updates dot indicators.
     * @param {number} index - The index of the slide to show.
     */
    function setSlide(index: number): void {
      state.slides.forEach((slide, i) => {
        const slideEl = slide as HTMLElement;
        const isActive = i === index;
        slideEl.classList.toggle(config.activeClasses.slide, isActive);
        slideEl.classList.toggle(config.inactiveClasses.slide, !isActive);
        slideEl.style.zIndex = isActive ? '10' : '0';

        state.dots[i].classList.toggle(config.activeClasses.dot, isActive);
        state.dots[i].classList.toggle(config.inactiveClasses.dot, !isActive);
      });

      state.currentIndex = index;
    }

    /**
     * Advances to the next slide in the sequence.
     */
    function nextSlide(): void {
      setSlide((state.currentIndex + 1) % state.slides.length);
    }

    /**
     * Starts the auto-advance interval for the slideshow.
     */
    function startInterval(): void {
      if (state.interval) clearInterval(state.interval);
      state.interval = window.setInterval(nextSlide, config.slideDuration);
    }

    /**
     * Resets the auto-advance interval, clearing and restarting it.
     */
    function resetInterval(): void {
      clearInterval(state.interval);
      startInterval();
    }
  }

  initSlideshow();
</script>
